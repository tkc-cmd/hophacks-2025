{"ast":null,"code":"var _jsxFileName = \"/Users/theo/Coding/pharmabot3/frontend/src/components/StatusIndicator.js\";\nimport React from 'react';\nimport { Wifi, WifiOff, AlertCircle, CheckCircle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusIndicator = ({\n  isConnected,\n  connectionStatus\n}) => {\n  const getStatusIcon = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-5 h-5 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 16\n        }, this);\n      case 'connecting':\n        return /*#__PURE__*/_jsxDEV(Wifi, {\n          className: \"w-5 h-5 text-yellow-500 animate-pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 16\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"w-5 h-5 text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 16\n        }, this);\n      case 'disconnected':\n      default:\n        return /*#__PURE__*/_jsxDEV(WifiOff, {\n          className: \"w-5 h-5 text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getStatusText = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return 'Connected';\n      case 'connecting':\n        return 'Connecting...';\n      case 'error':\n        return 'Connection Error';\n      case 'disconnected':\n      default:\n        return 'Disconnected';\n    }\n  };\n  const getStatusColor = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return 'text-green-600';\n      case 'connecting':\n        return 'text-yellow-600';\n      case 'error':\n        return 'text-red-600';\n      case 'disconnected':\n      default:\n        return 'text-gray-600';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center space-x-2 px-3 py-2 bg-white/50 rounded-lg\",\n    children: [getStatusIcon(), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `text-sm font-medium ${getStatusColor()}`,\n      children: getStatusText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusIndicator;\nexport default StatusIndicator;\nvar _c;\n$RefreshReg$(_c, \"StatusIndicator\");","map":{"version":3,"names":["React","Wifi","WifiOff","AlertCircle","CheckCircle","jsxDEV","_jsxDEV","StatusIndicator","isConnected","connectionStatus","getStatusIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getStatusText","getStatusColor","children","_c","$RefreshReg$"],"sources":["/Users/theo/Coding/pharmabot3/frontend/src/components/StatusIndicator.js"],"sourcesContent":["import React from 'react';\nimport { Wifi, WifiOff, AlertCircle, CheckCircle } from 'lucide-react';\n\nconst StatusIndicator = ({ isConnected, connectionStatus }) => {\n  const getStatusIcon = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\n      case 'connecting':\n        return <Wifi className=\"w-5 h-5 text-yellow-500 animate-pulse\" />;\n      case 'error':\n        return <AlertCircle className=\"w-5 h-5 text-red-500\" />;\n      case 'disconnected':\n      default:\n        return <WifiOff className=\"w-5 h-5 text-gray-500\" />;\n    }\n  };\n\n  const getStatusText = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return 'Connected';\n      case 'connecting':\n        return 'Connecting...';\n      case 'error':\n        return 'Connection Error';\n      case 'disconnected':\n      default:\n        return 'Disconnected';\n    }\n  };\n\n  const getStatusColor = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return 'text-green-600';\n      case 'connecting':\n        return 'text-yellow-600';\n      case 'error':\n        return 'text-red-600';\n      case 'disconnected':\n      default:\n        return 'text-gray-600';\n    }\n  };\n\n  return (\n    <div className=\"flex items-center space-x-2 px-3 py-2 bg-white/50 rounded-lg\">\n      {getStatusIcon()}\n      <span className={`text-sm font-medium ${getStatusColor()}`}>\n        {getStatusText()}\n      </span>\n    </div>\n  );\n};\n\nexport default StatusIndicator;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,OAAO,EAAEC,WAAW,EAAEC,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,eAAe,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAiB,CAAC,KAAK;EAC7D,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,QAAQD,gBAAgB;MACtB,KAAK,WAAW;QACd,oBAAOH,OAAA,CAACF,WAAW;UAACO,SAAS,EAAC;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC3D,KAAK,YAAY;QACf,oBAAOT,OAAA,CAACL,IAAI;UAACU,SAAS,EAAC;QAAuC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACnE,KAAK,OAAO;QACV,oBAAOT,OAAA,CAACH,WAAW;UAACQ,SAAS,EAAC;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACzD,KAAK,cAAc;MACnB;QACE,oBAAOT,OAAA,CAACJ,OAAO;UAACS,SAAS,EAAC;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IACxD;EACF,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,QAAQP,gBAAgB;MACtB,KAAK,WAAW;QACd,OAAO,WAAW;MACpB,KAAK,YAAY;QACf,OAAO,eAAe;MACxB,KAAK,OAAO;QACV,OAAO,kBAAkB;MAC3B,KAAK,cAAc;MACnB;QACE,OAAO,cAAc;IACzB;EACF,CAAC;EAED,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAC3B,QAAQR,gBAAgB;MACtB,KAAK,WAAW;QACd,OAAO,gBAAgB;MACzB,KAAK,YAAY;QACf,OAAO,iBAAiB;MAC1B,KAAK,OAAO;QACV,OAAO,cAAc;MACvB,KAAK,cAAc;MACnB;QACE,OAAO,eAAe;IAC1B;EACF,CAAC;EAED,oBACEH,OAAA;IAAKK,SAAS,EAAC,8DAA8D;IAAAO,QAAA,GAC1ER,aAAa,CAAC,CAAC,eAChBJ,OAAA;MAAMK,SAAS,EAAE,uBAAuBM,cAAc,CAAC,CAAC,EAAG;MAAAC,QAAA,EACxDF,aAAa,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACI,EAAA,GAnDIZ,eAAe;AAqDrB,eAAeA,eAAe;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}